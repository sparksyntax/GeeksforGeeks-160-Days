class Solution {
    static public boolean isWordExist(char[][] mat, String word) {
        // Code here
        int rows = mat.length;
        int cols = mat[0].length;
        
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (dfs(mat, i, j, word, 0)) {
                    return true;
                }
            }
        }
        return false;
    }
    
    private static boolean dfs(char[][] mat, int i, int j, String word, int index) {
        if (index == word.length()) {
            return true;
        }
        
        if (i < 0 || i >= mat.length || j < 0 || j >= mat[0].length || mat[i][j] != word.charAt(index)) {
            return false;
        }
        
        char temp = mat[i][j];
        mat[i][j] = '#';
        
        boolean found = dfs(mat, i - 1, j, word, index + 1) || dfs(mat, i + 1, j, word, index + 1) || 
                dfs(mat, i, j - 1, word, index + 1) || dfs(mat, i, j + 1, word, index + 1);
                
        mat[i][j] = temp;
        
        return found;
    }
}
