class Solution {
    public List<List<Integer>> findTriplets(int[] arr) {
        // Your code here
        Set<List<Integer>> set = new HashSet<>();
        int n = arr.length;
        Map<Integer, List<int[]>> map = new HashMap<>();
        
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int sum = arr[i] + arr[j];
                if (!map.containsKey(sum)) {
                    map.put(sum, new ArrayList<>());
                }
                map.get(sum).add(new int[]{i, j});
            }
        }
        
        for (int i = 0; i < n; i++) {
            int diff = -arr[i];
            if (map.containsKey(diff)) {
                for (int[] pair : map.get(diff)) {
                    if (pair[0] != i && pair[1] != i) {
                        List<Integer> triplet = Arrays.asList(i, pair[0], pair[1]);
                        Collections.sort(triplet);
                        set.add(triplet);
                    }
                }
            }
        }
        
        List<List<Integer>> result = new ArrayList<>(set);
        return result;
    }
}
